<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>hu.caiwan</groupId>
	<artifactId>skeleton</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<packaging>pom</packaging>

	<properties>
		<java-version>1.8</java-version>

		<!-- spring boot -->
		<org.springframework.boot.version>1.4.1.RELEASE</org.springframework.boot.version>

		<!-- spring -->
		<org.springframework.version>4.3.2.RELEASE</org.springframework.version>
		<org.springframework.security.version>4.1.3.RELEASE</org.springframework.security.version>
		<org.springframework.security.oauth.version>2.0.12.RELEASE</org.springframework.security.oauth.version>

		<!-- misc -->
		<javax.servlet.version>3.1.0</javax.servlet.version>
		<javax.mail.version>1.4</javax.mail.version>
		<commons-beanutils.version>1.8.3</commons-beanutils.version>


		<!-- tests -->
		<org.hamcrest.version>1.3</org.hamcrest.version>
		<junit.version>4.12</junit.version>
		<org.scribe.version>1.3.7</org.scribe.version>
		<org.mockito.version>1.10.19</org.mockito.version>
		<org.assertj.version>3.5.2</org.assertj.version>

		<!-- Maven plugins -->
		<cargo-maven2-plugin.version>1.6.0</cargo-maven2-plugin.version>
		<org.passay.version>1.0</org.passay.version>

		<!-- Misc props -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

	</properties>


	<dependencyManagement>
		<dependencies>
			<!-- Import dependency management from Spring Boot -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${org.springframework.boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>

		<!-- spring -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- AOP -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
		</dependency>

		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
		</dependency>

		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
		</dependency>

		<!-- logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<!-- <scope>runtime</scope> --> <!-- some spring dependencies need to compile against jcl -->
		</dependency>

		<dependency> <!-- needed to bridge to slf4j for projects that use the log4j APIs directly -->
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
		</dependency>

		<!-- tests -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.scribe</groupId>
			<artifactId>scribe</artifactId>
			<version>${org.scribe.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${org.mockito.version}</version>
		</dependency>
	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
				<version>2.3.2</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>3.0.1</version>
				<configuration>
					<attach>false</attach>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.19.1</version>
				<configuration>
					<excludes>
						<exclude>**/*IntegrationTest.java</exclude>
						<exclude>**/*LiveTest.java</exclude>
					</excludes>
				</configuration>

				<executions>
					<!-- integration-test -->
					<execution>
						<id>integration-test</id>
						<goals>
							<goal>test</goal>
						</goals>
						<phase>integration-test</phase>
						<configuration>
							<excludes>
								<exclude>none</exclude>
							</excludes>
							<includes>
								<include>**/*IntegrationTest.java</include>
								<include>**/*LiveTest.java</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.cargo</groupId>
				<artifactId>cargo-maven2-plugin</artifactId>
				<version>${cargo-maven2-plugin.version}</version>
				<configuration>
					<wait>true</wait>
					<container>
						<containerId>jetty8x</containerId>
						<type>embedded</type>
						<systemProperties>
							<!-- <provPersistenceTarget>cargo</provPersistenceTarget> -->
						</systemProperties>
					</container>
					<configuration>
						<properties>
							<cargo.servlet.port>8082</cargo.servlet.port>
						</properties>
					</configuration>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>1.4.2.RELEASE</version>
				<configuration>
					<fork>true</fork>
				</configuration>
			</plugin>

		</plugins>

	</build>

	<modules>
        <module>app</module>
		<module>services</module>
		<module>persistent</module>
	</modules>

</project>
